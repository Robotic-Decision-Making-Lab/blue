launch:

  - let:
      name: gz_model_name
      value: "uvms"

  - let:
      name: gz_world_file
      value: $(find-pkg-share blue_description)/gazebo/worlds/underwater.world

  - let:
      name: controllers_file
      value: $(find-pkg-share blue_demos)/manipulator_systems/config/uvms_controllers.yaml

  - let:
      name: description_file
      value: $(find-pkg-share blue_demos)/manipulator_systems/description/urdf/uvms.config.xacro

  - let:
      name: robot_description
      value: $(command 'xacro $(var description_file) controllers_file:=$(var controllers_file)')

  - node:
      pkg: ros_gz_bridge
      exec: parameter_bridge
      args: /clock@rosgraph_msgs/msg/Clock[gz.msgs.Clock

  - node:
      pkg: ros_gz_bridge
      exec: parameter_bridge
      args: /camera/image_raw@sensor_msgs/msg/Image[gz.msgs.Image

  - node:
      pkg: ros_gz_bridge
      exec: parameter_bridge
      args: /model/$(var gz_model_name)/odometry@nav_msgs/msg/Odometry[gz.msgs.Odometry

  - include:
      file: $(find-pkg-share blue_demos)/manipulator_systems/launch/uvms_base.launch.py
      arg:
        - name: gz_model_name
          value: $(var gz_model_name)
        - name: gz_world_file
          value: $(var gz_world_file)
        - name: robot_description
          value: $(var robot_description)
        - name: controllers_file
          value: $(var controllers_file)
